// loadtest.ts
import autocannon, { Instance, Result } from "autocannon";
import fs from "fs";

interface LoadTestConfig {
  url: string;
  connections: number;
  duration: number;
  pipelining: number;
}

const config: LoadTestConfig = {
  url: "http://localhost:8080", // URL server c·∫ßn test
  connections: 5000, // n·∫øu m√°y ch·ªãu n·ªïi
  duration: 10, // test 1 ph√∫t
  pipelining: 10,
};

console.log(`üöÄ B·∫Øt ƒë·∫ßu load test: ${config.url}`);
console.log(
  `üë• ${config.connections} k·∫øt n·ªëi | ‚è≥ ${config.duration}s | üîó pipelining=${config.pipelining}`
);

const instance: Instance = autocannon(
  config,
  (err: Error | null, result: Result) => {
    if (err) {
      console.error("‚ùå L·ªói khi ch·∫°y load test:", err);
      return;
    }

    fs.writeFileSync("result.json", JSON.stringify(result, null, 2), "utf-8");
    console.log("‚úÖ Test xong! K·∫øt qu·∫£ ƒë√£ l∆∞u v√†o result.json");
  }
);

autocannon.track(instance, { renderProgressBar: true });
